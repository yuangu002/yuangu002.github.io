<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-10-30T20:47:31-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Yuan Gu</title><subtitle>Carpe Diem, Seize the Day</subtitle><entry><title type="html">24岁，祝我生日快乐</title><link href="http://localhost:4000/24/" rel="alternate" type="text/html" title="24岁，祝我生日快乐" /><published>2022-10-08T00:00:00-07:00</published><updated>2022-10-08T00:00:00-07:00</updated><id>http://localhost:4000/hbd</id><content type="html" xml:base="http://localhost:4000/24/">&lt;p&gt;这是我 18 岁之后，第一次给自己放个假过生日。&lt;/p&gt;

&lt;p&gt;尤其是 20 岁之后的这几年，我甚至开始刻意回避过生日这个话题了，因为每一次的生日，都在提醒自己又大了一岁。这种感觉，一年比一年压抑。&lt;/p&gt;

&lt;p&gt;但过去这一年，对我来说意义还是挺特殊的，我终于走出了校园，走进了职场，以一个从业者的角度去观察和思考互联网。我还记得大二的时候，Kevin 问我学计算机想做什么？我说我毕业之后想去 Google，学技术，拿绿卡，然后做一番事业。Kevin 说你知道 wm 有几个毕业就能进 Google 的（然后忽悠我跟他合伙创业，因为这样可以走 eb5 不用排期），我说不知道，但只要一届有一个人，那为什么不是我呢？大三申硕士的时候，Kevin 劝我再留一年，争取一个更好的结果，我说凭什么？我现在比哪个大四的差么？&lt;/p&gt;

&lt;p&gt;今天的我，不会再说这么少年轻狂的话了。23岁这一年，我终于放慢了脚步，试着去发现这些年太过匆忙而被遗忘了的 – “生活“。&lt;/p&gt;

&lt;p&gt;第一件事，就是回国了。自从武汉封城之后匆匆地离开了北京，整整两年都没回过家。去年秋招的时候压力太大，做梦都是回到了初中的那间教室，醒来说一定要回八中看一看。但等到终于回国，都已经走到南礼士路了，反而找不到回去的理由了。毕业快八年了，老师估计不认识几个了，同学也大多不在北京，于是转悠了几圈怅然若失地离开了。&lt;/p&gt;

&lt;p&gt;近乡情更怯，不敢问来人。&lt;/p&gt;

&lt;p&gt;另一个愿望就是去一次西藏，对西藏的兴趣起源于高中毕业那年的一部电影，叫《冈仁波齐》，我看完了电影就决定，一定要和最爱的人去一次西藏。这个愿望因为学业，疫情，找工作被拖了快五年，终于等到有时间了，我却不知道谁是那个最爱的人了。朴树的主题曲里写的：“只有奄奄一息过，那个真正的我，才能够诞生”。想想我这几年精致利己的嘴脸，去了西藏就真能找到 inner peace 吗？&lt;/p&gt;

&lt;p&gt;回国的两个多月，我不再去留恋高中那些未竟的，虚无缥缈的梦了，因为我清楚，当年认为重要的事情，如果没有去做，以后也不会再有心态去做了。而这次回国，我有着更现实的牵挂 – “家庭”。&lt;/p&gt;

&lt;p&gt;我突然变得温顺起来了，之前不屑于参加的饭局，回老家见亲戚朋友，甚至出门买菜，接送上下班这种 “柴米油盐” 的工作，我好像也不那么抵触了。听着老人念叨着 “去 Google 干什么，回来当个公务员稳当啊”，我也只是微笑着点头，因为我明白了，有的时候陪伴比事实重要得多。对于一个 100% INTJ 来说，还真是有些讽刺。&lt;/p&gt;

&lt;p&gt;第二个话题，围绕着重逢和告别。回来入职的这大半年，我在美国的飞行里程应该超过了学生时代的总和。我想去看看朋友（顺便吃一顿公司当地食堂），无论是一年一度的重逢，还是 ”可能是最后一面“ 的告别。对旅行费用这个东西，我已经相当不敏感了，既然投资不景气，那赚的钱还不如花出去买个开心，或者至少买一个 ”将来不会遗憾“。洛杉矶，西雅图，波士顿，DC，匹兹堡，芝加哥…，我想记录几个旅行的瞬间：&lt;/p&gt;

&lt;p&gt;在 LA 逛 USC 校园的时候，看到大一新生 move in，心里挺感慨的，wm 的 convocation 已经是五年前了，但那一天发生的事情还是那么清楚，好像我还停留在意气风发的 18 岁，穿过 sunken garden 喊着 go tribe。第一次来 USC 还是大一，走马观花地只记住了一个叫什么 tower 的宿舍，这次我坚持一定要再去看看这个 tower，看到之后却很失望，心里有点堵，因为解释不了我究竟在寻找什么。&lt;/p&gt;

&lt;p&gt;我从不是个信教的人。高二那年迷上了 Richard Dawkins，《自私的基因》、《上帝的错觉》、《盲眼钟表匠》，这三本书几乎确定了我这几年的无神论信仰。我认为把现世解释不了的烦恼都推给一个 “全知全能” 的 “神”，然后寄托给并不存在的来世，这违背了最基本的科学精神和启蒙思想。但在 UCLA，我见到了快三年没见的朋友，他告诉我他已经受洗，每周都要去教堂礼拜。作为一个坚定的无神论者，我竟然有些理解了他的选择：尽管我仍然相信科学能解释一切，但我们活着，难道真的要把每一个细节解释清楚吗？我现在倒认为，如果这几年有些事情糊涂一点，不明白就别明白了，至少我会过得更快乐些。&lt;/p&gt;

&lt;p&gt;九月份借着出差的机会回了趟匹兹堡，入职半年多，对工作已经没有了新鲜感，每天开会扯皮吹牛逼，反而又觉得当学生是一件很纯粹的事。当时随便在 slack 群里说了一句可以带学生 office tour，没想到一小时不到就收到了10+ requests，不得不分批处理。第二天我问学生，Google 有啥好的？给的也不算多最近还 layoff（此处省略一系列的吐槽…）。学生说，那可是我的 dream company 哦，我在印度的时候就 blahblahblah…。我才明白一切都是围城，眼前的学生们，不就是大二时候那个立志要 “年少有为” 的我么？只是没想到才过了半年，我就置身于另一个围城之内了。&lt;/p&gt;

&lt;p&gt;最后一个主题可能有点沉重，那就是危机感，说好听了是成熟，说难听点就是衰老。公司不再以一个学生或者 intern 的标准去管理你，你需要自己评估风险，做出规划，承担责任。五年前还警告我高中生不要早恋的亲戚，今年竟然已经说出 ”是时候考虑个人问题了“ 这种话。好像长大就是一瞬间的事情，昨天还谈论着诗词格律和风花雪月，今天就要考虑 H1B 去哪儿办首签。在篮球场上，我遇到了 18 岁之后最大的伤病 - jumpers knees。初中的时候，第一天磕了膝盖第二天继续打，连热身都不带做的。而现在每一次打球都要面对热身，冰敷，甚至 physical therapy 等等一系列的 bullshit。我意识到，当年觉得理所当然的馈赠，都在暗地里标好了价格。&lt;/p&gt;

&lt;p&gt;要起飞了，耳机里响起了经济舱，聪别说：生活不是竞技场。&lt;/p&gt;

&lt;p&gt;20岁，我祝自己年少有为；24岁，我祝自己生日快乐。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Yuan @ Chicago ORD&lt;br /&gt;
2022/10/09&lt;/p&gt;</content><author><name></name></author><summary type="html">这是我 18 岁之后，第一次给自己放个假过生日。</summary></entry><entry><title type="html">[Effective Engineer] Mindset (Part 1)</title><link href="http://localhost:4000/effective-engineer/" rel="alternate" type="text/html" title="[Effective Engineer] Mindset (Part 1)" /><published>2022-07-15T00:00:00-07:00</published><updated>2022-07-15T00:00:00-07:00</updated><id>http://localhost:4000/effective-engineer</id><content type="html" xml:base="http://localhost:4000/effective-engineer/">&lt;p&gt;&lt;a href=&quot;https://www.effectiveengineer.com/book&quot;&gt;The Effective Engineer&lt;/a&gt;, written by Edmond Lau, is the Bible for software engineer. I summarize key points of this book (with minimal insights from me) and break it down into three major steps of practicing to become an effective engineer: adopting the right mindset, execute religiously, and build long-term value. This article is about part 1: the mindset.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: although a summary like this can help, I highly recommend reading it for more insights, as some examples in this book can inspire you to reflect your scenario at work.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The best thing that you can do is not pretend that you know everything, but go into it with the mindset that your job is to learn as much as you can, as quickly as you can.” - Mark Zuckerberg&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;chapter-1-focus-on-high-leverage-activities&quot;&gt;[Chapter 1] Focus on high-leverage activities&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Maximize the &lt;strong&gt;“leverage”&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;A simple math equation: impact produced / time invested.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-measure-impact&quot;&gt;How to measure impact?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;For software engineers: getting things done (GTD).&lt;/li&gt;
  &lt;li&gt;Measured by metrics: product launch, bug fixes, important features, performance optimization, seek approval/alignment.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-ways-to-increase-leverage&quot;&gt;3 ways to increase leverage&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Increase output/impact within a period of time.&lt;/li&gt;
  &lt;li&gt;Reduce invested time to do the same thing.&lt;/li&gt;
  &lt;li&gt;Focus on leverage points/high-leverage activities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;questions-to-ask-for-any-activity&quot;&gt;Questions to ask for any activity&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;How to get more things done per time unit?&lt;/li&gt;
  &lt;li&gt;How to get things done faster?&lt;/li&gt;
  &lt;li&gt;Is there a more high-leverage activity to do instead?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-2-optimize-for-learning&quot;&gt;[Chapter 2] Optimize for learning&lt;/h2&gt;
&lt;h3 id=&quot;adopt-growth-mindset&quot;&gt;Adopt growth mindset&lt;/h3&gt;
&lt;h4 id=&quot;stretching-outside-the-comfort-zone&quot;&gt;Stretching outside the comfort zone&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Networking for introverts: practice how to tell a good story.&lt;/li&gt;
  &lt;li&gt;Dialogue with strangers is a learnable skills.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;own-your-story&quot;&gt;“own your story”&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Build your own story instead of telling other’s story.&lt;/li&gt;
  &lt;li&gt;Excited to solve the next problem, even though you don’t have any background before.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;invest-in-learning-rate&quot;&gt;Invest in learning rate&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Learning increases in an exponential rate, like compound interests.&lt;/li&gt;
  &lt;li&gt;Optimize for learning early on: a good first job -&amp;gt; a rapidly growing career.&lt;/li&gt;
  &lt;li&gt;Small delta increments: the point is about staying consistent and committed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-in-the-environment-conducive-for-learning&quot;&gt;Work in the environment conducive for learning&lt;/h3&gt;
&lt;p&gt;I am being extremely exhaustive on this section because it can be a checklist when I want to switch job. :)&lt;/p&gt;
&lt;h4 id=&quot;fast-growth&quot;&gt;Fast growth&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Growth on core metrics: DAU, CTR, user engagement/retention rate, etc.&lt;/li&gt;
  &lt;li&gt;Are you going to work on initiatives that are &lt;strong&gt;core&lt;/strong&gt; to the company growth?&lt;/li&gt;
  &lt;li&gt;Are they aggressively hiring over recent years?&lt;/li&gt;
  &lt;li&gt;How quickly for superstars grow to leadership positions?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;training&quot;&gt;Training&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Is there onboarding/bootcamp period for new hire?&lt;/li&gt;
  &lt;li&gt;Is there formal/informal mentorship?&lt;/li&gt;
  &lt;li&gt;Willing to make long-term learning investment?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;openness&quot;&gt;Openness&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Cross-team transparency: what are other teams working on?&lt;/li&gt;
  &lt;li&gt;Culture of curiosity: proactively ask questions, open knowledge sharing, value feedback, etc.&lt;/li&gt;
  &lt;li&gt;Reflect and document past mistakes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;pace&quot;&gt;Pace&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Moving fast and break things: “fast” defined by iteration speed.&lt;/li&gt;
  &lt;li&gt;Lightweight approval process.&lt;/li&gt;
  &lt;li&gt;Where to spend the majority of time: maintenance versus building new product/features?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;people&quot;&gt;People&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Is the interviewer smarter than you?&lt;/li&gt;
  &lt;li&gt;Are interviews rigorous and comprehensive?&lt;/li&gt;
  &lt;li&gt;Meet with potential teammates beforehand: are they impressive?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;autonomy&quot;&gt;Autonomy&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Freedom to choose what to work on/how to do it?&lt;/li&gt;
  &lt;li&gt;Diversity of projects?&lt;/li&gt;
  &lt;li&gt;Engineer’s influence on product design &amp;amp; direction?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;leverage-work-opportunities-to-develop-your-technical-depth&quot;&gt;Leverage work opportunities to develop your technical depth&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;20% time at Google: take one-or-two hour per day instead of a full day.&lt;/li&gt;
  &lt;li&gt;Study codebase for classic software abstractions.&lt;/li&gt;
  &lt;li&gt;Internal educational materials.&lt;/li&gt;
  &lt;li&gt;Master your PL: at least one scripting language for quick prototyping.&lt;/li&gt;
  &lt;li&gt;Take courses of your weak points: professional degree, management science, MBA, etc.&lt;/li&gt;
  &lt;li&gt;Participate in design reviews that you are interested in.&lt;/li&gt;
  &lt;li&gt;At least a few senior members on the team.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;locate-learning-opportunities-outside-work&quot;&gt;Locate learning opportunities outside work&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Follow technical trends and learn skills with high demand.&lt;/li&gt;
  &lt;li&gt;Read books; attend talks/conferences; and write to teach.&lt;/li&gt;
  &lt;li&gt;Build a strong network of relationships: force yourself to meet people you don’t know.&lt;/li&gt;
  &lt;li&gt;Work on side projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;chapter-3-prioritize-regularly&quot;&gt;[Chapter 3] Prioritize regularly&lt;/h2&gt;
&lt;p&gt;Making prioritization as a routine means regularly identify/reidentify high-leverage activities.&lt;/p&gt;

&lt;p&gt;Never trust your brain to remember everything. Use checklist in whatever form, but the point is that &lt;strong&gt;you must write them down&lt;/strong&gt; and &lt;strong&gt;constantly reassess/reorganize them based on shifting priorities&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;what-should-be-prioed&quot;&gt;What should be prio’ed?&lt;/h3&gt;
&lt;h4 id=&quot;work-that-directly-produce-value&quot;&gt;Work that directly produce value&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Tasks that directly increases acquired users, sales, or impacts your team’s core business metrics.&lt;/li&gt;
  &lt;li&gt;Coding necessary features, seek PM approval for product launch, regular sync with teammates to avoid duplicate efforts, etc.&lt;/li&gt;
  &lt;li&gt;Only focus on what matters: say No to unnecessary meetings, coffee chat, small bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;important-but-non-urgent-tasks-identity-capital&quot;&gt;Important but non-urgent tasks (identity capital)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Investment that make you more effective but without urgent deadlines: build relationships, learn programming tools/environments, personal development, practicing prioritization, etc.&lt;/li&gt;
  &lt;li&gt;Investment in identity capital can help you with important-and-urgent tasks with being more productive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-execute-on-them&quot;&gt;How to execute on them?&lt;/h3&gt;
&lt;h4 id=&quot;protect-makers-schedule&quot;&gt;Protect maker’s schedule&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Block your calendar with long, continuous time slots for critical tasks, which enables you to enter the state of &lt;em&gt;flow&lt;/em&gt; (the effortless concentration).&lt;/li&gt;
  &lt;li&gt;Make your meetings back-to-back instead of fragmenting your schedule, which can reduce the context switch cost.&lt;/li&gt;
  &lt;li&gt;Set routines like “No meeting Wednesday”, “Focus Friday”, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;limit-work-in-progress-items&quot;&gt;Limit work-in-progress items&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Constant context switch between tasks hinder deep engagement of each one.&lt;/li&gt;
  &lt;li&gt;Human brain’s working memory can only &lt;em&gt;load&lt;/em&gt; 5-9 tasks on stage.&lt;/li&gt;
  &lt;li&gt;Use trial and error to find your &lt;em&gt;optimal number&lt;/em&gt; of WIPs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;make-it-a-habit-by-establishing-your-workflow&quot;&gt;Make it a habit by establishing your workflow&lt;/h3&gt;
&lt;h4 id=&quot;use-if-then-to-fight-procrastination&quot;&gt;Use if-then to fight procrastination&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Subconscious followup: If {conditions}, I will do {tasks}. This can prevent the moments that “I don’t feel like doing it” because the if condition subconsciously forces you to think the then-tasks are something that you need to do anyway.&lt;/li&gt;
  &lt;li&gt;To fill up small gaps: if I have 20 minutes, I will do {tasks}. So you won’t spend 10 minutes wondering what to do next and end up not finishing it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;build-your-own-routine-workflow-to-track-and-execute&quot;&gt;Build your own routine workflow to track and execute.&lt;/h4&gt;
&lt;p&gt;Edmond provides an example that beginners can start off with.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Divide your checklist to &lt;strong&gt;Doing&lt;/strong&gt;, &lt;strong&gt;Today&lt;/strong&gt;, and &lt;strong&gt;This week&lt;/strong&gt; sections.&lt;/li&gt;
  &lt;li&gt;Each item should have an ETA (estimated time to complete): use 25 minutes as a unit and mark each item with the estimated number of units.&lt;/li&gt;
  &lt;li&gt;Every morning, spend a few minutes planning: moving some items from &lt;strong&gt;This week&lt;/strong&gt; to &lt;strong&gt;Today&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;When you are free during the day or right before your “concentrated time block” starts, moving items from &lt;strong&gt;Today&lt;/strong&gt; to &lt;strong&gt;Doing&lt;/strong&gt;. Keep them short!&lt;/li&gt;
  &lt;li&gt;Monday morning/Sunday night, do a 30-minute review session to scope out &lt;strong&gt;This week&lt;/strong&gt; section for this week and retrospect on items that were not executed well in the last week.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">The Effective Engineer, written by Edmond Lau, is the Bible for software engineer. I summarize key points of this book (with minimal insights from me) and break it down into three major steps of practicing to become an effective engineer: adopting the right mindset, execute religiously, and build long-term value. This article is about part 1: the mindset.</summary></entry><entry><title type="html">起飞前随便写写</title><link href="http://localhost:4000/2022/06/19/random.html" rel="alternate" type="text/html" title="起飞前随便写写" /><published>2022-06-19T00:00:00-07:00</published><updated>2022-06-19T00:00:00-07:00</updated><id>http://localhost:4000/2022/06/19/random</id><content type="html" xml:base="http://localhost:4000/2022/06/19/random.html">&lt;p&gt;大一之后就像做了一场梦，时间过得已经没有了时间的概念，好像人生就只剩下了事业和证明，好像高中的梦想过于单纯，好像我没有选择过，只是被生活推着走，踽踽独行。&lt;/p&gt;

&lt;p&gt;上一次来波士顿是大一上学期的 final weeks，去 BU 和 Brandeis 找了朋友，final weeks 出来玩儿是因为在威廉斯堡快要炸了，找不到情绪的发泄出口。实话说那个时候很迷茫，不再想学IR了，可是也不确定要转什么专业，更不确定能不能学好计算机这种从来没有碰过的东西。&lt;/p&gt;

&lt;p&gt;而上一次去哈佛已经是七年前了，高一的暑假，第一次去美国。那个时候是跟旅行团走的，导游介绍哈佛的时候我听得很认真，1638 年建校，veritas 的含义，John Harvard 和胡适的故事，生怕错过了什么。&lt;/p&gt;

&lt;p&gt;这一次，我不会再 FOMO 了，也不会迷茫了，因为从大一之后，我好像找到了解决问题的固定模式，学不懂数学，那就去学计算机；找不到工作，那就去 cmu 混个 master；去不了 startup，那就去 Google。也就是说，我不会再像高中选本科那样没有主见，问来问去各方意见。现在我只会默默做决定，然后像运行算法一样去执行它。但同时，我也不会再保持好奇了，不会觉得“未来可期”了，用最近比较装逼的话说，就是失去了 serendipity 吧。&lt;/p&gt;

&lt;p&gt;昨天跟朋友喝酒时候说，高中总觉得日子太慢，可大学过得太快了，快到还觉得高中毕业就是前几天的事儿；今天另一个朋友说，23岁到30岁，看似漫长，其实过得更快，一眨眼就可能过去了。&lt;/p&gt;

&lt;p&gt;要起飞了，再见波士顿。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Yuan @ Boston
2022/06/19&lt;/p&gt;</content><author><name></name></author><summary type="html">大一之后就像做了一场梦，时间过得已经没有了时间的概念，好像人生就只剩下了事业和证明，好像高中的梦想过于单纯，好像我没有选择过，只是被生活推着走，踽踽独行。</summary></entry><entry><title type="html">又到了离开的时候</title><link href="http://localhost:4000/bye-shanghai/" rel="alternate" type="text/html" title="又到了离开的时候" /><published>2022-03-14T00:00:00-07:00</published><updated>2022-03-14T00:00:00-07:00</updated><id>http://localhost:4000/bye-shanghai</id><content type="html" xml:base="http://localhost:4000/bye-shanghai/">&lt;p&gt;我自认为我是相当没有仪式感的一个人，过年过节、过生日、实习、毕业、入职。。。人生种种的关键节点，从来没停下来 emo 过。但惟独每次要回美国的时候，在机场拥抱告别，看飞机滑行降落，心里总有一些话想说，大概这就是“多情自古伤离别”罢。&lt;/p&gt;

&lt;p&gt;第一次来上海是 2017 年，走马观花地还留着一些记忆，外滩、东方之珠、杜莎夫人、奥灶面、周边的几个小镇和园林，以及很困惑于上海的道路命名方式。但要说最深刻的，莫过于在机场买了一本李开复的《人工智能》。刚刚高中毕业的我，大学的专业是 undecided，高中最感兴趣的是世界历史，对计算机的了解程度嘛。。。这么讲，我当时都不知道怎么打开 terminal，于是我花了整整一晚上理解了什么是激活函数。虽然一知半解，但我还是很兴奋，并不是因为 ML 能赚多少钱，而是我想那个叫 sigma 的函数里一定蕴藏着神秘的力量，而 undecided major 可以带我去探索这些未知。&lt;/p&gt;

&lt;p&gt;五年后再次来上海，我已经硕士毕业，一周后就要入职 Google，做着五年前梦想过的那些探索。那个看似神秘的 sigma 函数，也仅仅是庞大神经网络里一个相对 trivial 的环节而已，对于我已经完全失去了探索的兴趣。我更不会再去机场买《人工智能》这种科普书，而是检查了好几遍护照、签证、EAD卡，和核酸证明，在这个动荡的大局势下，现实地有些讽刺。&lt;/p&gt;

&lt;p&gt;我开始回想，这五年我到底失去了什么？&lt;/p&gt;

&lt;p&gt;我曾经以为，自己拥有的东西都是理所当然的，家人永远不会老去，恋人永远不会疏远，朋友永远不会离开，好奇心永远不会磨灭。我的人生轨迹就是一个又一个确定的目标，然后不顾一切地为之努力，至于现在拥有的，都可以为了下一个目标而暂时牺牲掉。反过来想，我的每一个目标都不是深思熟虑的，也许是从众，也许是证明，也许是不甘人后，但一旦确定了，就像原教旨主义一样，疯狂到可以不择手段。&lt;/p&gt;

&lt;p&gt;我赢了，因为我成功地完成了每一个目标。我也输了，因为曾经拥有的，既然选择失去便是永恒。&lt;/p&gt;

&lt;p&gt;高中最爱看的电影是死亡诗社，我甚至把 Carpe Diem 当作座右铭写进了大学文书：“我将活在当下，用尽热情，燃烧生命，不求前程似锦，但求无愧于心”。很惭愧，不知不觉间，我背叛了当年的承诺，我变得越来越冷漠、刻薄，在二进制的游走中消磨着热情，开始把人生当作模型，把资源当作参数，在一次次透支的过程中优化自己的人生。&lt;/p&gt;

&lt;p&gt;23岁，我不奢求能找回失去的一切，只希望对工作保持一份好奇，对生活平添一缕烟火，对朋友给予一点真诚。同时，也立一个五年后回国发展的flag，不至于愧对家庭的那一份责任。&lt;/p&gt;

&lt;p&gt;Carpe Diem, 青春万岁。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Yuan
2022.3.14 @ Shanghai&lt;/p&gt;</content><author><name></name></author><summary type="html">我自认为我是相当没有仪式感的一个人，过年过节、过生日、实习、毕业、入职。。。人生种种的关键节点，从来没停下来 emo 过。但惟独每次要回美国的时候，在机场拥抱告别，看飞机滑行降落，心里总有一些话想说，大概这就是“多情自古伤离别”罢。</summary></entry><entry><title type="html">我在 CMU 学到了什么？</title><link href="http://localhost:4000/cmu-master/" rel="alternate" type="text/html" title="我在 CMU 学到了什么？" /><published>2022-02-23T00:00:00-08:00</published><updated>2022-02-23T00:00:00-08:00</updated><id>http://localhost:4000/cmu-master</id><content type="html" xml:base="http://localhost:4000/cmu-master/">&lt;p&gt;刚刚收到了从 CMU 寄到北京的毕业证，我这个人比较浅薄，实在没有做科研的伟大志向，所以硕士应该是我学生时代的结尾了。回想起两年前举足无措的自己，CMU 确实是给了我一个更高的平台，得到了很多在 wm 不可能得到的机会，并且在毕业的时候拿到了 6 个 全职 offer，找工作的过程也非常顺利，甚至单单用 CMU 这个 title 就可以拿到面试。经济方面，从2020年8月到2021年12月，这一年半也不算拮据，不像在 wm 一样出了车祸连 2500 的 deductible 都拿不出来，一共两万多奖学金，加上暑假实习和 TA 的钱，几乎 cover 了一大半的学费，所以总体来说，我对 CMU 确实很感激。&lt;/p&gt;

&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;/assets/diplomas.JPG&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;再见了，学生时代&lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;但人吧，就是很矫情。我总觉得硕士，尤其是计算机硕士，作为一个 terminal degree（不往上读博士了）是一个很亏本的买卖。尤其是对于美本 CS 来讲，本科毕业也可以拿到大厂的 entry level（比如 Google L3），那么硕士的意义就显得很鸡肋。虽然 CMU 的课程确实很好，比如 Cloud/Database/Storage 这三门课，让我终于理解了什么是 Scale，以及如何去设计一个数据密集型的系统，但课程总归是学术的，而我也非常清楚我是一定要去工业界的，加上 INI 有几门很傻逼的课程（说的就是 740），让刚刚毕业的我确实发了点牢骚，认为这一年半进步不是很大。我甚至天真地想，如果没有读研，那我21岁的时候就可以是全职工程师了，当然前提是本科毕业的时候能找到好工作。&lt;/p&gt;

&lt;p&gt;但静下心来仔细想想，还是得承认 CMU 带给我的改变。&lt;/p&gt;

&lt;h3 id=&quot;对计算机系统的理解&quot;&gt;对计算机系统的理解&lt;/h3&gt;
&lt;p&gt;虽然是计算机科班，但我这个科班实在是很业余。首先是 wm 的计算机系非常不成体系，东一榔头西一棒子，到毕业了我都没理解计算机里最重要的 client-server model 怎么运作，对于数据库，网络和并行计算这些高级一点的知识，连最基本的概念都没有。再有就是因为三年毕业，第二年才转 CS，还有 math double major，CS 上课其实上的非常赶。18年刚刚转行，都是在上数据结构和算法这些入门课。19年 spring 为了赶毕业进度上了四门数学课，19年 fall 又连着 4 门 CS 课，20年 spring 拿到录取了，所以一整个学期都放羊了。这样看来，其实在 wm 三年并没有对计算机有一个全面的理解，我甚至快毕业了还有一个问题：为啥要有数据库这种东西啊？直接用 HashMap 不就好了么？&lt;/p&gt;

&lt;p&gt;虽然这个问题现在看很傻逼，但至少说明了几点：&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;尽管学了 304，我没有彻底理解什么是 memory，更搞不清楚各种储存介质的 access time 和 cost，就是那个经典的金字塔模型，至于在实际系统设计的时候的 tradeoff，想都没有想到过。&lt;/li&gt;
  &lt;li&gt;我对 volatile 和 non-volatile storage 没有概念，现在想想用户的数据要储存在内存里就很可怕。&lt;/li&gt;
  &lt;li&gt;我对 Scale 一无所知，我以为一台电脑足以储存整个app的用户信息。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SCS 的各种 system 课上下来，这些知识已经内化成了常识，所以我才会有一种本科毕业就 qualified as an engineer 的错觉。就算是凭着不错的算法能力能拿到 offer，对高并发系统的缺乏理解注定了在职业发展上非常受限。很不幸的是，wm 没有分布式系统甚至数据库的课程，304 和 OS 讲的也是单机系统，不涉及 scale 的任何问题，这样看来早一年毕业真的是正确的决定，不然再呆一年也是浪费时间，找不着好工作然后继续读研。&lt;/p&gt;

&lt;h3 id=&quot;prioritization--diversity&quot;&gt;Prioritization &amp;amp;&amp;amp; Diversity&lt;/h3&gt;
&lt;p&gt;我实在为 Prioritization 找不到一个满意的词来翻译，优先级划分有点太僵硬了。&lt;/p&gt;

&lt;p&gt;不如这么来理解，本科的你在规划未来，你有三个选择：&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;毕业后直接找到好工作（需要实习）&lt;/li&gt;
  &lt;li&gt;申到 PhD（需要科研）&lt;/li&gt;
  &lt;li&gt;走一个直通转学名校的项目/混个 master（需要达到 GPA 和其他标准）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;你不可能同时保证 1-2 个实习，科研能出成果，还能保持很高的 GPA，所以你一定要放弃一些相对不重要的选项。问题是大部分本科生其实都搞不清楚自己到底要不要去读 PhD（这很正常，也没有关系），你要做的就是选择（没错，就算你不知道），你越快做出选择，你的试错成本就越低。千万不能有 liberal arts/general education 这种封建思想，时间有限，只读经典。&lt;/p&gt;

&lt;p&gt;在 wm 我感觉科研也得做（说不定能做出点啥牛逼的东西了呢），实习也得找（不然毕业没饭吃），哥大 3+2 总能当个保底吧，反正项目要求也不高，就顺带手满足一下吧。结果就是哪个做的都不好不坏，实习在国内外企养了个老，科研做的都是半吊子科研，做系统工程能力上不去，做 ML 数学基础太差，甚至连哥大 3+2 都要被迫上很多既不喜欢又没意义的必修课，反而拉低 GPA /占用时间。&lt;/p&gt;

&lt;p&gt;如果说在 wm 你还勉强可以所有的都兼顾，并且都做的一般，CMU 就没有这种可能性，甚至单单是上课一项，你都需要在找工作忙的学期战略性放弃一些，而且 CMU 的氛围比较 technical，专业课很难，通识课很水，这种氛围不自觉也会加强学生 “把时间放在重要的事情上” 的 mindset。&lt;/p&gt;

&lt;p&gt;Diversity 其实比较好理解，一个学校越 technical，必修课越少，diversity 就越高，因为这样每个人都会很快地找到自己的 priority 然后试错。很多 wm 的同学直到大三课表都差不多（因为都是通识），后一两年才开始做选择（万一选错了你都没时间改了），这种 “小而美” 的教育模式反正我是匪夷所思。&lt;/p&gt;

&lt;h3 id=&quot;校友网络--竞争性&quot;&gt;校友网络 &amp;amp;&amp;amp; 竞争性&lt;/h3&gt;
&lt;p&gt;虽然我对 INI 的课程意见很大，教授的水平也确实有限，但 INI 对于学生就业的关注程度应该是 CMU 里最高的了，毕竟 INI 的毕业要求强制实习。而且大家找工作的氛围非常好，基本上各种类型的公司都能找到校友内推。这一点应该是 CMU 最有价值的地方，就是 alumni network。我之前一直没有很关注这一点，但就长远来看，一个学校在你所处行业里拥有的人脉，比开设什么课程要重要得多。之前看过一个 TedTalk 演讲里提到一个概念：weak connection，就是弱连接。其实职场不同于学校，本身大家的 connection 就很弱，所以校友这种弱连接会以一种潜移默化的方式影响你，而且是一辈子的影响力。&lt;/p&gt;

&lt;p&gt;我之前确实吐槽过 CMU 的 career fair 没什么用，因为竞争太激烈，你的简历放进去就石沉大海了，大二本科简历都比你好看。但反过来看，就算石沉大海，这也是一个潜在的机会，或者说让我看清了自己和别人的差距，你可以说这是内卷，但往好处想也确实开眼界。在 wm 的时候不得不说我过的挺舒服，因为我觉得至少在计算机系里我挺厉害，现在看就是一叶障目不见泰山，看不到自己需要提高的地方。你可能会说，那为什么总要跟 wm 比？我只能说这种问题就是鸡生蛋蛋生鸡，事后诸葛来看这话当然是对的，但问题就是人都是囿于眼界的，而且习惯于停留在舒适区，大四留在 wm 每月拿个 cover 生活费的 RA 工资，给本科生讲讲课，再混个 PhD 读一读，这人就是温水煮青蛙会废掉的，之后你自己都不想找工作了。&lt;/p&gt;

&lt;h3 id=&quot;一段含金量很高的实习--cloudera&quot;&gt;一段含金量很高的实习 @ Cloudera&lt;/h3&gt;
&lt;p&gt;正是在 CMU 这种找工作的氛围之下，暑假我去了 Cloudera 实习，做一个类似于 HDFS 的 Apache 的&lt;a href=&quot;https://ozone.apache.org&quot;&gt;开源项目&lt;/a&gt;。这次实习算是一段很惊喜的体验，因为我本来没有 expect project scope 可以这么大。我实习三个月，第一次看到做的东西投入 production，并且和学校里的 toy project 不一样，学到了很多工业界常用的框架，包括以前从来没听过的东西，比如 RocksDB，Dependency Injection，Mockito，CI/CD pipeline。之前在学校学过的东西，比如 RPC/REST APIs，实习的时候实实在在地看到了在工业界的实现，真正理解了为什么在 distributed system 里需要 encoding/marshalling。&lt;/p&gt;

&lt;p&gt;比实习本身更重要的，一是遇到了很好的 manager 和 mentor，一直在问我的职业规划。我说我想做 full stack，因为每个领域都能学到一点，于是我暑假的项目就临时加了一点前端/data viz，但 manager 也很实诚，最后和我谈 return 的时候说，自己并不看好一毕业就做 full stack，因为什么都会一点就代表什么都不会，建议我还是往 backend/system infra 的方向去走，选一个方向 dive deep 几年成为 expert，之后再去 pick up 全栈。二是这段实习经历对简历非常有帮助，找全职的时候除了门槛太高的 HFT 至少能给个面试。&lt;/p&gt;

&lt;h3 id=&quot;平台和-brand-name&quot;&gt;平台和 brand name&lt;/h3&gt;
&lt;p&gt;我十分同意 “学校不能定义一个人” 这句话，尤其是对于工程师这种实践大于理论的职业。但是世界就是残酷且世俗的，学校是一个非常方便的标签，帮助 HR 去快速地做出 “我该继续看下去还是把简历扔进垃圾桶” 的决定，而 CMU 给了我这个 “让 HR 继续看简历” 的机会。甚至之前申请实习的时候，有一个做 static code analysis 的小公司直接邀请我 onsite，说得也很直接：“我们认为 CMU 的学生不会浪费我们的 onsite 机会”。在国内，wm 只会被当成英国的野鸡学院来看待，就算在美国，wm 计算机系的直接就业情况并不好，基本都困在了 DC 和 nova 一带的公司，要不是亚麻18年去 arlington 建数据中心，毕业生基本和 FLAG 绝缘了。&lt;/p&gt;

&lt;h3 id=&quot;my-heart-is-in-the-work&quot;&gt;My heart is in the work&lt;/h3&gt;
&lt;p&gt;这一点更哲学一点，但其实又很实际。CMU 之前，我对自己的 “work” 并没有理解。这个 work 其实并不一定是狭义上的工作，我认为可以把定义放宽：就是 “你愿意投入时间的事情（commitment）”，然后把它当作长期的事业去培养。甚至我觉得跑步都算 work，之前看过一个知乎博主在 CMU 读 PhD 的时候，一有空就要围着 Schenley Park 跑几圈，我想这就是对这句话的诠释吧：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Turn everything you do into a career; take pride in your work, and take the responsibility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;/assets/farewell.png&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;再见了，CMU。&lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;Always proud to be a Tartan!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Yuan @ Beijing
2022/02/23&lt;/p&gt;</content><author><name></name></author><summary type="html">刚刚收到了从 CMU 寄到北京的毕业证，我这个人比较浅薄，实在没有做科研的伟大志向，所以硕士应该是我学生时代的结尾了。回想起两年前举足无措的自己，CMU 确实是给了我一个更高的平台，得到了很多在 wm 不可能得到的机会，并且在毕业的时候拿到了 6 个 全职 offer，找工作的过程也非常顺利，甚至单单用 CMU 这个 title 就可以拿到面试。经济方面，从2020年8月到2021年12月，这一年半也不算拮据，不像在 wm 一样出了车祸连 2500 的 deductible 都拿不出来，一共两万多奖学金，加上暑假实习和 TA 的钱，几乎 cover 了一大半的学费，所以总体来说，我对 CMU 确实很感激。</summary></entry><entry><title type="html">【秋招碎碎念】大厂还是 startup？</title><link href="http://localhost:4000/ng-ft-swe/" rel="alternate" type="text/html" title="【秋招碎碎念】大厂还是 startup？" /><published>2021-12-25T00:00:00-08:00</published><updated>2021-12-25T00:00:00-08:00</updated><id>http://localhost:4000/swe-ft</id><content type="html" xml:base="http://localhost:4000/ng-ft-swe/">&lt;p&gt;总算是毕业了，在确保最后一学期没有挂科的情况下匆忙地买了回国机票。10天前刚考完最后一门 final，现在就已经到了 LA 酒店，等待大使馆发绿码，希望祖国能接受我的千里投毒。&lt;/p&gt;

&lt;p&gt;匆忙之余，总要写点东西纪念一下这个 draconian 的最后一学期，毕竟学生时代大概的确是结束了。而总体来看，在 CMU 的一年半还算是满意，找全职意想不到地顺利（今年 market 太好），所以打算趁着没入职，记录一下关于秋招的碎碎念。&lt;/p&gt;

&lt;h3 id=&quot;时间线&quot;&gt;时间线&lt;/h3&gt;
&lt;p&gt;投的算是比较早，毕竟12月就要毕业，7月份还在 Cloudera 实习（划水）就开始投了。投的策略非常简单：去 levels.fyi 上设一个 filter，看哪家全职给的比 Cloudera (190k~) 高，比 Cloudera 低的就不投了（说的就是 Apple）。大概7月份和8月份都没有安排面试，做了一堆 OA 或者 CodeSignal，约了几家下一轮（VMWare，Cruise，Foursquare，剩下没到 onsite 的都忘了）。&lt;/p&gt;

&lt;p&gt;面试基本都安排在了九月和十月，我安排的比较策略性：phone screen 尽量安排在早上或者晚上，要么就是两节课之间的空隙，如果有多轮就 request back-to-back，因为这样的话 context switch 不会有太多的 overheads；onsite 基本一天下午搞完，尽量不拆成两天（保持状态）或者一天安排两场（亲测下午那场就会摆烂），10月之后我就几乎不面了，毕竟前半段 GPA 属于挂科状态，多拿几个同质化 offer 不如稳一点毕业。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;very rough interview timeline&lt;/strong&gt;：&lt;br /&gt;
9.3: Houzz phone screen，面完被 HR ghost 了&lt;br /&gt;
9.6: Cruise HR chat，这轮算面试。。问了快一个小时&lt;br /&gt;
9.13: Foursquare 两轮 phone screen&lt;br /&gt;
9.16: C3 AI phone screen，挂&lt;br /&gt;
9.22: Verkada phone screen&lt;br /&gt;
9.23: Cruise 两轮 phone screen&lt;br /&gt;
9.27: Scale AI phone screen（20岁辍学的哈佛小哥面我个22岁的。。）&lt;br /&gt;
10.4: Cruise onsite（4）&lt;br /&gt;
10.5: Foursquare onsite（5）&lt;br /&gt;
10.6: IXL Learning phone screen&lt;br /&gt;
10.6: Shopee phone screen&lt;br /&gt;
10.12: Scale AI onsite（4）&lt;br /&gt;
10.14: VMWare Propel onsite（4）&lt;br /&gt;
10.15: Google onsite（5）&lt;br /&gt;
10.18: Shopee final/manager interview&lt;br /&gt;
10.19: IXL Learning onsite (面了前两场就摆烂了，直接退了 meeting)&lt;br /&gt;
10.26: Cruise manager interview&lt;br /&gt;
10.29: Verkada (physical) onsite @ San Mateo (5)&lt;br /&gt;
11.4: Rubrik 前两轮 onsite (skip phone screen)&lt;br /&gt;
11.9: Rubrik 后两轮 onsite&lt;br /&gt;
11.12: VMWare Networking 组招 onsite, skip phone screen (3)&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;offers&quot;&gt;Offers&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Cloudera return&lt;/strong&gt;: ~190k, RSU (176k) as cash, equally vested in 4 years. Bonus paid quarterly.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Foursquare&lt;/strong&gt;: ~180k, based in LA.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Google (accepted)&lt;/strong&gt;: ~220k first year, front loading vesting schedule.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VMWare组招&lt;/strong&gt;: ~190k, 股票比 Propel 多 50k.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cruise&lt;/strong&gt;: 不到200k，down-level to L2.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rubrik&lt;/strong&gt;: 太晚才出口头 offer 直接给拒了&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Shopee&lt;/strong&gt;: ~500k RMB, based in Singapore.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;onsite-reject&quot;&gt;Onsite Reject&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Verkada&lt;/strong&gt;：我觉得我面的挺好的。。而且Verkada是唯一一家疫情期间坚持现场 onsite 的公司，结果面完一周之后打电话告诉我被拒了。。。不过面试体验还是不错的，其中有两轮的面试官都是sales，有一个还是VP，感觉比较像硅谷早期的面试风格。比如其中两个问题是“美国一共有多少个teddy bear”和“给你30分钟，说服我买xxx产品”。这家 VP 基本都是 sales 出身，而且公司文化上比较像大学的兄弟会（frat culture）。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scale AI&lt;/strong&gt;：一个哈佛，一个UCB，两个MIT，能过才怪。。题很像 ICPC 的风格，核心算法不难，但 corner case 很多，而且不追求优化，感觉想考察在短时间内给出一个能 minimally work 的 solution 的能力。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VMWare Propel&lt;/strong&gt;：&lt;del&gt;垃圾，真的垃圾。&lt;/del&gt;极其常规的leetcode，面试官全都敷衍了事，最后一位居然说我把 reverse linkedlist 写错了。。面完手贱发了个邮件，写了几个 tests，附上了结果正确的 console log，果然被拒了。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;黑名单&quot;&gt;黑名单&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;IXL Learning:&lt;/strong&gt; &lt;del&gt;傻逼公司。&lt;/del&gt;居然还有压力面这种东亚文化糟粕。其他面的面试官也都爱答不理，我讲完思路问 make sense 吗他说让我先写，写完了又告诉你这不对那不对，&lt;del&gt;妈了个逼的&lt;/del&gt;不会早说？&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VMWare Propel:&lt;/strong&gt; 面试官&lt;del&gt;傻逼&lt;/del&gt;就算了，HR 拒人还挺有艺术：先给你约个 Zoom 说有 update 了，meeting 之前发封邮件告诉你被拒了，meeting 的时候直接 no show，半个小时给你发邮件说家边上刮台风电脑 crashed 了。。。直接回邮件 diss back。&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Shopee:&lt;/strong&gt; 实话新加坡厂的办事效率还是不错的，5分钟内回邮件的 HR 真没见过，约面试时间也非常快。可惜就是终面的面试官水平属实有限，想装逼都装不到点上。第一轮 engineer 面还可以，常规 bfs + followup，第二轮 manager 简直是灾难，说到数据库不知道buffer pool，说到分布式系统设计不知道 ACID，你自己都不知道就别考 system design 了，容易翻车。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;一些策略和-takeaway&quot;&gt;一些策略和 takeaway&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;尽量把所有的 onsite 集中在一个月，这样 offer 有效的时间大致重叠，方便一起 compete。&lt;/li&gt;
  &lt;li&gt;面到有offer之后就可以选择性地面试，面之前查一查大概能给多少钱，同质化的 offer 收多了没什么用，最好的就是有一个很高的 superstar offer（但不一定是最想去的），用这个去 compete 真正想去的厂。我如果能有一个 HFT 或者给的很高的 startup，就可以用它来 compete Google，可惜的是 Cruise lowball 了我，level 上比正常 NG 低了一级，叫 associate swe，打听了一下是因为组是写移动端的全栈组，不算核心业务。其他的 cloud 相关的厂都给的大差不差，毕竟 cloud 已经是很成熟的产业了，给的并没有我想象的多。&lt;/li&gt;
  &lt;li&gt;对于 GPA，要抱着及格万岁的心态，不过在 INI 还要保证奖学金不被 revoke，所以得悠着点儿。&lt;/li&gt;
  &lt;li&gt;NG 并不是不能尝试 1-3 年的 experienced hire，只要你简历能说服 HR 就行。&lt;/li&gt;
  &lt;li&gt;12月毕业的话最后一学期压力还是挺大的，适当放松心情，可以在 onsite 之间的周末出去玩儿一圈。10月底的时候也不是特别想去面 Verkada，但因为连续一个月的 onsite 实在太累了，所以就借着 Verkada 现场面试飞了一圈三番，去看了 CMU 的硅谷校区，和很多因为疫情从没见过面的朋友吃了饭，打了保龄球，尽管那个时候堆了很多作业，当天晚上就要飞回来补考 midterm。事后很意外地看，这是我那个学期过的最开心的两天。&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;/assets/bowling.JPG&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;生活不是竞技场, 2021/10/29&lt;/div&gt;
&lt;/center&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&quot;大厂-crud-还是-startup-走一波&quot;&gt;大厂 CRUD 还是 startup 走一波？&lt;/h3&gt;
&lt;p&gt;这个问题我几乎是想了快一个学期，到现在也不知道 Google 到底是不是自己内心的选择，是不是还是会潜意识地考虑 brand name 和身份问题。如果你九月份问我，我一定会放弃 Google，选择 Cruise。其实什么 IPO 之后股票翻倍都不是决定性的，而是在 Cruise 能够 deliver 更大的 impact，尤其是无人车商业化刚刚起步的阶段，需要 engineer 去做用户体验，增长，构建成规模的 data infra pipeline/cloud backend。而 Google 因为今年先走 PA match 的政策，没有办法知道具体的组，而且 Google 虽然用户体量大，但每个人具体做的东西仅仅是庞大系统里的一个小零件，甚至说很容易就会成为 CRUD engineer, which I don’t want to be at the beginning of the career…&lt;/p&gt;

&lt;p&gt;但从另一个角度来想，不是内心的选择其实也没那么重要，因为从世俗的角度看，职业生涯必须要考虑 brand name 和身份：没有 brand name 背书，就像我本科在 wm 的时候一样，连面试的门槛都进不去（虽然我觉得 Cruise 应该没有这个问题）；没有身份，未来的一切都是白搭，甚至被迫转到其他国家的组。所以毕业头两年去 Google 学学技术，把身份稳下来，不算“妙手”，也算是“本手”吧&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;当然，我很可能是错的，只是目前，我已经做出了我认为是“本手”的选择。当年本科放弃南加大选择了 wm，之后的几年我抱怨过，也站在不同的位置上重新分析过，但我从没有后悔过当年的选择，因为如果「想学文科，喜欢文理教育，可能读 PhD」的 assumptions 仍然存在，我还会义无反顾地选择 wm。人终究是囿于当前的 assumptions 的，所以没有必要纠结是对是错，只要做了选择，就算未来 assumptions 改变，我也能承受这个选择所带来的结果，就够了。&lt;/p&gt;

&lt;h3 id=&quot;吐个槽&quot;&gt;吐个槽&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;垃圾 INI，垃圾 740，这个不划&lt;/strong&gt;&lt;br /&gt;
我真是不明白 INI 何苦要开这么多自己的课，如果说学不到东西但是能轻松混个学分，不说好课但起码不至于是垃圾课，但 Bill Nace 的 740 实在是无法忍受的烂。INI 应该发挥自己的优势（工业界的校友资源，找工项目的口碑，practicum project），而不是非要拙劣地弥补弱势（教学水平）。其实大家都懂，教的水平就是烂，与其费力招教授，还不如放学生去上 SCS 的课，至少不要设这么多&lt;strong&gt;垃圾&lt;/strong&gt;的必修课。我知道院里也想有些牌面，但是清楚自己擅长什么很重要，比如主打找工作的口碑，课程上开几门 networking &amp;amp; security 相关的课，讲得好再设成必修，讲得烂就放过学生吧。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Yuan @ Los Angeles 
2021/12/25&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;意为掌握一般分寸的合乎本分之著手 – 百度百科 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">总算是毕业了，在确保最后一学期没有挂科的情况下匆忙地买了回国机票。10天前刚考完最后一门 final，现在就已经到了 LA 酒店，等待大使馆发绿码，希望祖国能接受我的千里投毒。</summary></entry><entry><title type="html">2020 Fall MSCS 申请攻略和总结</title><link href="http://localhost:4000/grad-app/" rel="alternate" type="text/html" title="2020 Fall MSCS 申请攻略和总结" /><published>2020-05-03T00:00:00-07:00</published><updated>2020-05-03T00:00:00-07:00</updated><id>http://localhost:4000/cs-grad-app</id><content type="html" xml:base="http://localhost:4000/grad-app/">&lt;p&gt;&lt;strong&gt;个人背景：&lt;br /&gt;&lt;/strong&gt;
&lt;strong&gt;学校：&lt;/strong&gt;威廉玛丽学院&lt;br /&gt;
&lt;strong&gt;专业：&lt;/strong&gt;CS + 数学，三年毕业 (本来想四年的，课上太快了第四年没课上，被迫提前毕业)&lt;br /&gt;
&lt;strong&gt;申请方向：&lt;/strong&gt;SDE &amp;amp; ML。全 master，本科毕业找不着工作 + 喜欢钱 + research 摧毁了我对 phd 的幻想&lt;br /&gt;
&lt;strong&gt;成绩：&lt;/strong&gt;overall GPA 3.8+, CS GPA 3.9+; GRE: 331 (v: 162; q: 169; aw: 4.5)&lt;br /&gt;
&lt;strong&gt;推荐信：&lt;/strong&gt;三封 faculty（two CS and one math）+ 一封国内实习老板。faculty 应该没有强推，math 就是普通课程推，因为跟推荐的中国教授经常打球所以关系比较好（我估计教授到最后觉得我数学没啥可写的可能就写篮球了）。CS 两封都是 research supervisor，一段 ml 一段 performance analysis on compiler。两段都没有成果，所以我自己都觉得没啥可写的，因为compiler太冷了所以那个教授我就只用了两三个 research-focused 的项目。国内老板嘛，你懂的，如果单看内容肯定这篇最强。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;经历：&lt;/strong&gt;几乎没啥可讲的，没 publication，两段没有任何结果的 research，一段国内 IBM 实习，几个移动端开发的工程项目，基本上都是自己无聊打发时间或者凑课程 term project 写的，唯一能说两句的是 ml 的那段 research，研究了一篇paper里的提出的ml模型和算法是否可以复现，因为 source code 没有公开也没有足够的 studies 去 validate effectiveness，所以我和教授合作尝试去实现它，最后也没弄出来，所以我们推测不能复现。&lt;br /&gt;
&lt;strong&gt;SOP (academic purpose)：&lt;/strong&gt;基本上就写了一稿，把 motivation 和 experience 讲明白了（人家就自然明白你 purpose 了），每个学校最后一段why school 稍微改改，找美国室友通读一遍查查语法，卡着最后一天交。唯一比较新颖的是读闲书比较多，开头扯了一句人类简史里的话显得自己很文艺。。。（因为我申美本的时候写文书有经验了所以整个文书从构思到 finalized 就一周不到，当然也是因为我觉得并没有人细看 master 的 sop，个人观点）&lt;br /&gt;
&lt;strong&gt;PS (diversity statement)：&lt;/strong&gt;比较讲政治正确或者 metropolitan 的学校会有这个，有的要求有的 optional，因为 ucb 要求而且第一个截止，剩下 optional 我也就凑活改改就交了。我写的 familial obstacles，因为我家里人都是搞金融的，但我学 CS 刚开始家人很不支持（毕竟金融还算有个关系嘛），后来凭着自己的努力说服了家人让他们相信我，然后最后一段吹一下所谓民主的灯塔 USA，比中国更重视才能而不是关系 blahblah。。。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;选校/申请过程：&lt;/strong&gt;&lt;br /&gt;
1.6: Berkeley EECS Meng (reach)&lt;br /&gt;
1.15: CMU ECE/SV-SE (match); CMU INI-MSIN (reach); UIUC MCS (match); USC MSCS (safe)&lt;br /&gt;
1.22: NYU MSDS (reach)&lt;br /&gt;
1.24: Cornell Tech CS Meng (match)&lt;br /&gt;
1.30: Rice MCS (safe)&lt;br /&gt;
1.31: Duke MSCS (match)&lt;br /&gt;
2.1: Cornell CS Meng (reach); GaTech MSCS (reach)&lt;br /&gt;
2.15: Columbia (match); JHU MSE (safe)&lt;br /&gt;
3.15: Upenn CIS (reach); Brown MSCS (match)&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;为什么按 ddl 标呢？因为极其拖延，不到最后一天不动文书&lt;br /&gt;
为什么都选这么晚的呢？CMU SCS 和 UC 系（UCLA &amp;amp; UCSD）为啥不申呢？&lt;br /&gt;
好问题，因为我10月底才准备申研，11月底才定好找谁写推荐信，12月底才考出来GRE，而且我三年毕业，申12月ddl的学校就意味着学校只能看到我前两年的成绩，which CS 专业课不太够而且没到3.9。Stanford 这种就没想过，CMU SCS 我唯一比较喜欢的项目是 MCDS（但听说 INI 能上成低学费版的），MSCS 就不去做分母了，其他小方向我觉得好好弄弄文书挖掘一下 match 点应该能中一个，但我本科就是 CS 真不太 care SCS 这个 title，与其学一个自己不喜欢的方向不如一心赚钱。UCLA 太早了推荐信还没弄全呢，UCSD 跟哥大定位重了，有点后悔的是应该申一下耶鲁，对我来说这是一个比 match 稍微高一点点的项目，但当时了解不够，另外很迷信专排，现在觉得 yale 是藤校里除了康奈尔最好的 CS 了。。。&lt;br /&gt;
所以我是12月28号 GRE 出分我才开始申请，总共文书就花了一周吧。&lt;/p&gt;

&lt;p&gt;虽然文书写的比较快，我觉得我对每个学校都是有了解的，因为太晚决定申请，没请中介，只能上学期学累了自己在地里/知乎上搜然后配合官网去看。当时就是学习之余当个消遣，但看多了也明白了一些套路，比如谁偏爱海本，谁卡三维，谁看 match，哪个学校的哪个项目是王牌，对自己 profile 的定位，MSCS/MCS/MEng in CS 的区别，IS/DS/ECE 和 CS 相比就业前景等等等等，前期没有目的的去搜集信息还是有点效果的，一月份我写每个文书基本很快就可以抓住 match 点去展开，而且在看一个新项目的时候就可以马上反应这个适不适合我。&lt;/p&gt;

&lt;p&gt;整个申请的过程就感觉自己不是特别 technical/research-oriented，虽然科班是很硬的 CS + math，但我更喜欢 UI design/product management/entrepreneurship 啥的，所以我加了几个不那么纯 CS 的项目，CMU SV-SE 完全是冲着找工作去的（因为我本科 CS 几乎上完了所有领域，唯一一门必上的研究生课是数据库，所以研究生课程对我没那么重要），CMU INI/Berkeley 听说可以上商科的课，Cornell tech 有点创业风，NYU MSDS 是我真的觉得 data 和 ml 的课程很有实用性，UIUC/Rice MCS 就是单拎出来的 professional 项目，就业氛围很强。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;经验：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;大体排序：硬核科研 (有 paper) &amp;gt; GPA &amp;gt;= 推荐信 &amp;gt; 硬核实习经历 (国内知名大厂/在美国) &amp;gt; CV &amp;gt;= 语言 (TOEFL &amp;gt; GRE) &amp;gt;= SOP/PS&lt;br /&gt;
&lt;strong&gt;科研：这玩意儿就是个 bug&lt;/strong&gt;&lt;br /&gt;
为什么先写科研呢？因为这东西对于申请研究生来说太 bug 了。一篇顶会一作/二作是直接可以逆转申请结果的因素，就算是普通会的一二作也是一个很大的加分项。尤其对于 master，因为大多人都没有，publication 就成了 bug 级的存在，GPA 的 bar 之前是 3.8 可以被一篇 pub 降到 3.5，GRE 更变得可有可无。但这个东西你有就是有，没有的话也别想着编，好好看下面你能控制的东西。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;语言：纯 filter，但你得过线&lt;/strong&gt;&lt;br /&gt;
GRE资料：&lt;a href=&quot;https://github.com/yuangu002/GRE&quot;&gt;https://github.com/yuangu002/GRE&lt;/a&gt;&lt;br /&gt;
为什么把语言放第二个呢？托福和GRE就是单纯的一个 filter，过线就算达标，到 average 最好，考的特别高稍微加一点分，但不是特重要的因素&lt;br /&gt;
托福：美本 waived，高中三年啥都没干就刷托福和 SAT 了。CMU INI 让提交 expired score 我就提了四年前的纸质成绩单：111 (30+28+24+29)，因为没法通过官方 report 了我就扫描了一下传给小秘了。&lt;br /&gt;
GRE：词汇：高三备考新SAT阅读的时候背过一阵子3000，所以单词有底子，我就没有系统再背单词了，直接刷鸡精（1100词），考前一周过了一遍1400佛脚词（xdf韩冰的那本）。对于GRE，其实是看单词不是背单词，又不要求你掌握拼写和读音，你就多看几遍有个印象，同义词一定要看一眼，6选2全是原题直接选，选三个空的就直接放弃吧，留着时间给阅读，你的 verbal 分数其实取决于你阅读的表现。&lt;br /&gt;
阅读：虽然技巧不多，但我还是讲一些我是怎么做题的。首先你得明白一个 section 时间是非常紧张的，你如果长阅读读着读着就 lost 了那干脆就全瞎蒙，先做简单题，比如短阅读和一些逻辑题是真的不难，仔细读懂就会选。争取要保证你花过时间思考的题要拿分，剩下的全蒙就完了。&lt;br /&gt;
数学：刷了一遍巍哥难题170，虽然我也没170。。。&lt;br /&gt;
写作：背模版，全都是套路。读懂文章 + 背熟模版 + 托福独立 Good 应该能保底4吧。&lt;br /&gt;
Btw，我觉得新 SAT 写作比 GRE 难，而且对 argument 的题很有帮助。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;托福我不了解了，听说是 105 就很稳了，再往上就没意义了，但有些藤比如耶鲁布朗宾大很喜欢 110+。GRE 这个东西大部分项目都不卡，那么你 320+ 就OK了。有些项目卡单项，比如哥大和 Gatech 对阅读的 bar 都是153，宾大要求写作4。还有的项目给一个 average stats，这种学校就是比较心机，比如杜克 MSCS 给每年统计的 average 数据，伯克利的 meng 是平均 verbal 70% 和 quant 90%，这种最好满足一下，不算 bar 但你如果低于 average 就可能在其他条件和别人僵持不下的时候吃亏。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;lt;以下：针对美本申请美研+没有paper&amp;gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;GPA：make or break your application I&lt;/strong&gt;&lt;br /&gt;
我们学校 GPA 卡的挺严的，一般 93 是 A，还有的课 94/95 是 A，没有 A+，curve 看教授和整体班里水平。我 CS 课一般都是A或者A-，数学和一些通识比较低。GPA 怎么样其实完全取决于你怎么选课，我就是大二作死选了个毛子的数学课。美本（申 master 不读博的）我建议还是去 rmp 上看看教授评分，真别为了学东西选硬核的给分不好的教授，不读 phd 没意义。一学期水课混一混就能 4.0，一学期全硬核生不如死最后勉强 3.7，但最后成绩单上体现的都一样。有人说：选硬核教授你可以学东西啊 blabla 可以做 research 啊 blabla，都他妈是在扯犊子。你一个 CS 本科生在教室里能学个啥？想做 research 你直接去找教授嘛。你申的是 master 又不是 phd，最后你找工作看你刷了多少道题又不是看你上过啥课。&lt;/p&gt;

&lt;p&gt;我感觉 3.8 是 top10 CS master 的一个底线，3.9 又是完全不一样的一个档次，4.0 就更 nb 了。不要听一堆人 bb 低 GPA 高录的案例，因为 GPA 低被拒惨了的就不会来这跟你分享了。尤其是美本，你的高 GPA 就是学术能力的保证，所以美本一定好好刷 GPA。选校的时候跟学长学姐打听打听他们的 GPA，我听说 committee 是根据前些年录的你们学校的人的 GPA 去推测你们学校 GPA 的含金量，不过 top50 的美本各大学校 committee 应该心里都有个数，所以不用担心，可劲儿刷就完了。&lt;/p&gt;

&lt;p&gt;GPA 为什么能 make or break 呢？美本 3.9+ 的 GPA 就是 bug，尤其是 top30 或者知名工科院校，完全可以掩盖科研经历不足（因为高 GPA 可以证明你的学术和科研潜力）。相反如果你没有 paper 或者 faculty 的强 connection，低 GPA 就是第一轮被小秘 filter 掉的，application 都到不了教授手上。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;推荐信：make or break your application II&lt;/strong&gt;&lt;br /&gt;
又是一个美本和陆本不一样的因素。陆本如果是国内老师推荐几乎就不看了，所以最好找美国大学系统下的老师写。美本的推荐信还是挺重要的，尤其是高评价+名教授/connection。我是三封 faculty：一封美国的 adjunct lecturer，是我一个 research project 的 supervisor和一门研究生 ml 课的教授，这篇表现 research 和 academic potential in graduate-level courses，所有学校全用；一封中国 assistant professor，带我做过一段编译器和性能分析，也教过我编译原理，考虑到 compiler 太冷了这篇我就用了几个特别强调科研的项目。一封中国 professor（数学系），教我图论，这篇就是纯上课 + 一个 term project，表现学术和工程能力，因为经常一块打球所以考虑到应该不会是黑推，全用。除了 faculty 我还找了 IBM 实习的 mentor，这篇用 professional 的项目，表现工程和 communication/leadership 啥的。&lt;/p&gt;

&lt;p&gt;推荐信为什么能 make or break 呢？美本系统下的推荐信都是有认证的，所以大学会比较相信推荐人，那么他们的评价至关重要，如果有 connection，比如教授就是从该学校毕业的或者教授很知名，并且对你有高评价，这就是顶级的推荐。如果不认识推荐人但是评价很好，写出了很多细节来支撑你的 qualities，尤其是 research 或者非 term project 的项目，这就是强推。如果不认识推荐人并且普通课程推，也给了好评价，这种就一般般，不强也不伤。相反，黑推可以直接 break，有时候黑推不一定特别 explicit，但比如教授写“他就是上过我的xxx课，拿了A，但这就是我所有了解他的了”，这种就算黑推，所以千万不要找有这种可能的教授。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;简历：concise and professional&lt;/strong&gt;&lt;br /&gt;
我的推荐信是仔细设计过的，professional 项目一篇 research 一篇上课一篇实习，research-oriented 的两篇 research 一篇上课。所以基本我的简历就能完全对应推荐信的内容，大致就是两个 research projects，几个课程 projects，一段实习。没啥亮点，直接在 overleaf 上找的模版，找给我写推荐信的美国 supervisor 改了改。我建议参照模版，压缩到一页， major GPA 如果比 overall 高要注明，class rank 如果有要注明，每一个奖项要注明含金量或者 bar，志愿者活动/社团/学生会就别写了，与其两页松松垮垮的不如一页简洁一点，至少给人一个不水的第一印象。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文书：It just doesn’t matter&lt;/strong&gt;&lt;br /&gt;
怎么说呢，我是真心觉得这玩意儿不重要。。。（除了 CMU SCS 的一些项目）&lt;br /&gt;
SOP 我就基本把简历和推荐信里的经历串起来 paraphrase 了一遍，没亮点也没黑点吧。我觉得这东西很鸡肋，从高中申请美本的时候我就特抵触这个东西，为什么说他鸡肋呢？因为如果你有点东西，比如你有 paper，the paper will speak itself，如果你科研有结果，那么你的 CV 和推荐信一定都可以表现出来，那你写这个 sop 就非常简单了，平铺直叙，我进了 X 教授的实验室，读了 Y paper by Z，做了什么尝试，得到什么结果，future works 等等。如果你像我一样没什么东西，那么写这个 sop 就是浪费时间，因为你怎么编都会显得很不自然很 contrived，如果担心 sop/CV 和推荐信对不上，你还不如就实话实说。所以我的观点是，你当然应该花时间去写，保证没有语法错误，但不要太重视，不要去斟酌每一个词的用法，更不要每个学校都 customized，最后一段 why school 换一下名字就完了。个人不觉得 sop 可以逆转申请结果，语言是 filter，paper 是 bug，GPA 和推荐信直接决定你的档次，别的材料都叫 supporting materials，master 那么多申请人你的文书能让人家看 30 秒就不错了。&lt;/p&gt;

&lt;p&gt;PS (diversity statement) 就更不重要了，don’t say something insane，you‘ll be fine。&lt;/p&gt;

&lt;p&gt;可以搭个梯子看看Quora，如果phd都不重要，master就更不重要了：
https://www.quora.com/What-should-be-the-flow-of-thoughts-in-a-statement-of-purpose-SOP-for-graduate-admissions&lt;/p&gt;

&lt;p&gt;Some quotes:
“Show us what you’ve done. Write in simple, direct, flawless English. I have seen many flowery phrases like “my first trembling steps” in applications statements, but never in successful application statements.”&lt;/p&gt;

&lt;p&gt;“The short version: 99% of SOPs sound identical. Either avoid wasting time on it, or make it original by doing something different. But know that in all likelihood, it will likely have little impact on your admission chances”&lt;/p&gt;

&lt;p&gt;“Admission committee members are reading about 100 applications over 2 or 3 weeks and they’re making quick decisions about whether to put the person on the long list for further consideration or not (each application is usually read by at least 3 faculty). As such, you simply don’t have time to read every word and you’re looking for things that make quick impressions. Unless you won the Westinghouse prize, your childhood is going to be pretty identical to hundreds of other people.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一点 emo 的总结：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;去年七月在 IBM 刷了一个月的 leetcode，八月份回来跟刘老师正式挂了 RA，九月份按部就班地上课，报告 research 进度，当时就想这样的日子也挺好的，有车有酒有朋友，lab 里还有钱拿，之前非要三年毕业的想法越来越淡了&lt;br /&gt;
但十月份，过了 21 生日，看着大家申研申博找工作，觉得自己过得太安逸了，家里的意思是无论如何都得读研。然后查了查 banner，吓了一跳，竟然已经 119 个学分了&lt;br /&gt;
10月底，临时决定申研，三年毕业&lt;br /&gt;
停掉了 lab 里的事，注册了 1p3a，一直潜水不敢说话，觉得自己目前就两年的背景，17年学了一堆国关政府，18年6月才开始写第一行代码，水 research 水实习，GRE 没准备，跟常规毕业的没法比，当时想法特别卑微，我想今年申请就当玩玩，录的好再告诉大家，全拒了就当啥都没发生…反正我还有一年 backup&lt;br /&gt;
11/12月，不想再去回忆，五门专业课，diy 选校，报 GRE，找推荐信，做简历，research project，还有5个 final&lt;br /&gt;
考完 final 才开始看 GRE，关了自己一周，饿了叫披萨，困了就抽烟&lt;br /&gt;
12.28，GRE 出分，从 Chesapeake 开回堡的路上放着歌，可能是压抑太久了，大吼着一些 nonsense，回家之后发现嗓子哑了&lt;br /&gt;
12.31，在东京转机时查到了 4.0 的 semester gpa，这才和家里人漫不经心提一句，哦我今年顺便申了个研&lt;br /&gt;
这才开始大幅度调整学校，去了一些保底，看了看卡梅还有哪些没截的，随手报了 msin&lt;br /&gt;
因为准备的实在太匆忙，文书基本一周编完，1.15晚上在郑州的海底捞提完了申请，因为 replaceAll 用的不是很熟练，好几个学校名字都写串了&lt;br /&gt;
当时心态特别好，觉得只要来个保底就好，于是申请完就开玩，连续喝酒蹦迪了两周，至少不用清醒地面对过去半年的一切&lt;br /&gt;
然后就是不真实的三月，卡梅的 top 找工项目，高三 ED 被拒的杜克，大二转学被拒的康奈尔，曾经的梦校哥大，纽大柯朗所下的 Data Science，还有香槟/布朗/宾大，居然都来了 ad。。。一度后悔没试一下大 S 😂&lt;br /&gt;
能说的只有感谢，感谢刘老师给了我第一个科研机会 (劝退了 phd 的念头)，感谢喻老师一直以来的指导和劝我读 phd，感谢 White 帮我改简历写推荐信分析最后的决定&lt;br /&gt;
感谢同届申请 CS 的各位，你们的优秀激励我变得更好&lt;br /&gt;
感谢帮我看过文书的所有人&lt;br /&gt;
感谢 mgk 的 at my best，lamar 的 DNA，陈鸿宇的行歌，宋岳庭的 lifes a struggle，周董的以父之名和四面楚歌，陪我度过了黑暗的 2019 fall&lt;br /&gt;
最后，感谢我自己，前两天收拾东西的时候翻出了一张图，这应该是去年夏天在 lab debug 的时候写的😂，不管今后的顾源变得多么世俗，都还会记得曾经如此真实地轻狂过，倔强过，也努力过&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;/assets/lyrics.png&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;致那个不服输的自己, 2019/06&lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;要做一个真正的Software Engineer了，Hello CMU&lt;br /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;顾源&lt;br /&gt;
2020/05/03&lt;/p&gt;</content><author><name></name></author><summary type="html">个人背景： 学校：威廉玛丽学院 专业：CS + 数学，三年毕业 (本来想四年的，课上太快了第四年没课上，被迫提前毕业) 申请方向：SDE &amp;amp; ML。全 master，本科毕业找不着工作 + 喜欢钱 + research 摧毁了我对 phd 的幻想 成绩：overall GPA 3.8+, CS GPA 3.9+; GRE: 331 (v: 162; q: 169; aw: 4.5) 推荐信：三封 faculty（two CS and one math）+ 一封国内实习老板。faculty 应该没有强推，math 就是普通课程推，因为跟推荐的中国教授经常打球所以关系比较好（我估计教授到最后觉得我数学没啥可写的可能就写篮球了）。CS 两封都是 research supervisor，一段 ml 一段 performance analysis on compiler。两段都没有成果，所以我自己都觉得没啥可写的，因为compiler太冷了所以那个教授我就只用了两三个 research-focused 的项目。国内老板嘛，你懂的，如果单看内容肯定这篇最强。</summary></entry><entry><title type="html">威廉玛丽劝退帖</title><link href="http://localhost:4000/on-wm-cs/" rel="alternate" type="text/html" title="威廉玛丽劝退帖" /><published>2020-03-25T00:00:00-07:00</published><updated>2020-03-25T00:00:00-07:00</updated><id>http://localhost:4000/bye-wm</id><content type="html" xml:base="http://localhost:4000/on-wm-cs/">&lt;p&gt;可算毕业了，盼了三年，心情真是相当激动。没错我是来劝退的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结论：学CS想赚钱的不要来（不打算phd的），而对于不做科研来讲，CS master除了名声没什么实际意义。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;比起综排次一档的强工科比如普渡麦迪逊 uiuc，真不建议来 wm 学 CS。&lt;/p&gt;

&lt;p&gt;首先我来夸夸 wm 吧，我承认这些优点，虽然对 CS 找工没有任何帮助。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;科研资源很好。你如果想做科研读 CS 博士，wm 本科是一个不错的跳板，课程设置很理论，CS theory/compiler/system 资源绝对是够了，热门方向差一点，不过 ML 的话你可以找数学系的教授。虽然比不上南加大/ucla这样的，但综排同档次学校 wm 肯定不拉后腿&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;文科很强。因为校友很广，离 DC 也近，IR/political science/history/public policy专业算 tier 1 吧&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基础理科都不错，不算顶级但不拖后腿。数学系真的很强了，各方向都有厉害的教授，尤其 matrix theory 有top3级别的 Charles Johnson&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;本科认可度/含金量挺高的，申研申博都是优势&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;好我要开始黑一波了&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;CS 课程设置太偏理论/过时，学的东西几乎和当前 industry 毫不相关。CS 本身就是实践引领理论的学科，除了两三门课（之后会讲），我不觉得系里的课对你以后进工业界有什么用。你能想象一个学校的计算机系不开数据库和 web 开发么？OS 和网络这种重量级的必修课我们是选修而且两年开一次。编译原理作为必修我觉得没毛病，但是图灵机就算了吧。。。除了 regex 我觉得一点用都没有。而且除了301别的课编程量太小了，CS 本身就是没法考试的学科，学一堆理论不会实现对找工也白搭啊。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基础课体验真的太差了。。。简直是摧毁人对 CS 的热情。入门课141一共就俩 session，加一起70来人，可每年想报的人起码100往上，作为 freshman 你抢不上的话后面的专业课全上不了。数据结构年年 Jim Deverick 教，打分吹毛求疵，追求没有意义的形式主义。Davis Tim上课跟念经一样，都不知道 wm 从哪招的这俩连个 phd 都没有的 lecturer，没钱也不至于这么糊弄学生吧&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;学校太不重视新兴工科了。21世纪了，wm 连个独立的 CS 楼都没有，到现在还跟 geology 混一个楼。一直没想明白，投资 CS 这样的工科明显更 profitable 嘛，而且年年 CS major 人数暴涨，需求确实在。学校为啥转不过来这个弯呢？&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;因为学校不给系里钱，CS 热门方向发展不起来，教授好多都是做 system/security 的，纯做 ml/AI 的就没有（有两个做 applied ml 的，但太牵强了。系里虽然开始从数学系挖人了但 ml 一直没发展起来），别的方向厉害的教授 wm 根本留不住。至于业界目前比较流行的技术，比如 cloud computing/分布式/storage，一概没有课程。Machine learning 一共就两门课，420 neural networks 是我三年上的最有用的 CS 课，推荐一下 Martin White，416 intro to ml 别上，虽然 lewis 还是很厉害的。另一门有用的课是 301 Software Development，Kemper的 project 设计的很实用，基本学完可以初步入门安卓移动端开发和 Java 高级编程，435 Software Engineering 应该也很 hands on，很遗憾没有机会上了。剩下的课，基本就是听听就好。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我还是要吐槽一下，为什么 CS 本科生不能做 TA？这是我见过最奇葩的规定。Cornell MSCS 的申请条件是 Successful TA experience，我跟 lewis 申请，他和 Kemper 跟我打了小半年太极最后告诉我因为系里没钱。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;系里几乎是没有就业服务的，有也是 VA 的 local 小公司而且大多还 require US citizenship，大厂学校帮不上一点忙（当然你可以找 phd 内推，我们的博士就业都挺好的）。Cohen 改简历就是 pure pain，体验极差。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;(除了 CS 也吐槽点别的吧)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;食堂，我大一快吃吐了。而且服务态度更差，staff 都一副爱吃不吃爱搭不理的表情跟你欠丫钱一样。就这么难吃的食堂学校也有脸强制 on campus 的买meal plan，我都不知道我交的学费变成什么了。。。能去还是去个私立吧，贵点就贵点，你会发现你多花的钱至少是值得的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;地理位置太村了。。上个学没必要把自己搞得苦行僧一样，工欲善其事必先利其器，岁月静好跟赚钱本身就是矛盾的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;低年级住宿条件也太次了，一个学期3500住在有蚂蚁蟑螂的房间里，现在学校又改政策强制前两年 on campus，捞钱的吃相有点难看&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;放下自己所谓“北美第二古老大学”的虚荣，别动不动就拿出1693当遮羞布吹 legacy，开学典礼给新生说说就完了，真想发展的越来越好还得靠正确的投资去拉动长期回报，干点实事儿，别让历史成为负担。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;综合来讲，如果你学 CS 的短期目标是去大厂做 SDE，wm 能别来还是别来，去一个重视工科的学校，你会过的更有意义一些。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;最后我想感谢帮助过我的中国教授们，感谢他们的指导和推荐信，也真心劝 wm 给系里打点钱，留住这些教授们，别整天想着搞什么 diversity/leadership/feminism 这种政治正确，把钱花在 ROI 高一点的地方，至少不会两年 usnews 从32下滑到40。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;原地址：https://www.zhihu.com/question/24305453/answer/1103830520&lt;/p&gt;</content><author><name></name></author><summary type="html">可算毕业了，盼了三年，心情真是相当激动。没错我是来劝退的。</summary></entry><entry><title type="html">写于武汉封城的当天：我的2019</title><link href="http://localhost:4000/2019/" rel="alternate" type="text/html" title="写于武汉封城的当天：我的2019" /><published>2020-01-24T00:00:00-08:00</published><updated>2020-01-24T00:00:00-08:00</updated><id>http://localhost:4000/new-year</id><content type="html" xml:base="http://localhost:4000/2019/">&lt;p&gt;本来想写点武汉的，想了想写了也发不出去，算了。&lt;/p&gt;

&lt;p&gt;最近在重看 1984 和枪炮病菌钢铁，一语成谶。想写一写，还是怕发不出去。那就说说个人吧，社会话题太宏大了。&lt;/p&gt;

&lt;p&gt;2020元旦，我发了一首歌：I lived，那就从这开始吧。如果用一句歌词来概括，那就是”with every broken bone, I swear I lived”。不得不说，2017年我还迷茫着未来，2018年一整年我都质疑着自己，2019年，我付出过，得到过，也遗憾过。&lt;/p&gt;

&lt;p&gt;我付出过，我已经两年没有如此努力过，上半年四门数学课让我明白了我确实不是一个天才。夏天进实验室，做实习，好不容易觉得 CS 还挺有意思，想读个 PhD。下半年四节 CS 又让我认清了自己的平凡，我就是一个普通的工程师，只有凭着努力和一点小聪明，才能在计算机行业立足。我接受了世俗，学会了妥协，学会了给中国教授送烟送茶叶，也学会了在群体里如何游刃有余。&lt;/p&gt;

&lt;p&gt;我得到过，我得到了虚名，得到了学长学姐的尊重，没有人再敢惹我。但到头来，不过是一场空而已。曾经我以为如此神圣的尊重，得到了，就失去魅力了。但我得到的更可贵的，是心态。我终于不那么在乎别人的看法，甚至于无视。以前我特别看不上我爸，觉得他看的书都很油腻很政治，直到夏天没事儿闲的看了他书架的苏东坡传。人的境遇可以忽高忽低，但心态不能。“不以物喜，不以己悲”，10年前就背过的文言文，终于理解了背后的含义。&lt;/p&gt;

&lt;p&gt;我也遗憾过，当我的付出得到了回报，我到了更高的平台，去接触了更强的人，我并没有羡慕，也没有绝望，只有对自己的后悔。无数个如果，我都设想过可能的不同的结局。我不自律，不坚持，因为少年轻狂一点点看着一手好牌打成这个样子，这些都是遗憾。&lt;/p&gt;

&lt;p&gt;回来的这个寒假，我去了5次迪厅，只有重金属和嘻哈的狂躁才能治愈，忘记过去的遗憾，因为现在的我更期待未来。&lt;/p&gt;

&lt;p&gt;2019，刻骨铭心，但是我大学里最满意的一年。&lt;/p&gt;

&lt;p&gt;不知道你这一年过的好不好，但我希望你过的不好，我希望你被打击，被挫败，被背叛，被伤害，用最大的敌意保护自己，用最大的善意拥抱生活。认清巅峰时的簇拥，也珍惜黄昏时的信徒。我希望你体会过山车般的生活，但保持波澜不惊的心态。愿你求古仁人之心，或异二者之为。愿你用出世的态度做人，入世的态度做事。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Yuan&lt;/p&gt;</content><author><name></name></author><summary type="html">本来想写点武汉的，想了想写了也发不出去，算了。</summary></entry><entry><title type="html">大三之前的一点emo</title><link href="http://localhost:4000/before-the-junior/" rel="alternate" type="text/html" title="大三之前的一点emo" /><published>2019-08-20T00:00:00-07:00</published><updated>2019-08-20T00:00:00-07:00</updated><id>http://localhost:4000/bye-beijing</id><content type="html" xml:base="http://localhost:4000/before-the-junior/">&lt;p&gt;好久没沉下心来写写东西，上一次还是高中毕业当晚，漫无目的填着词牌，写了删，删了改，孤独但自由。&lt;/p&gt;

&lt;p&gt;两年了，在留学第三年，第一次走前这么矫情。&lt;/p&gt;

&lt;p&gt;2017年，高中毕业的暑假，去做助教。每天谈英语，谈文学，谈政治，谈理想，谈一切不可量化的抽象。每天都学很多没有用的东西，比如日语，比如编程。我觉得新的人生才刚刚开始，美国就在我眼前，一切都可以被自由意志支撑着走下去，并且充满了惊喜。&lt;/p&gt;

&lt;p&gt;2018年回来，对美国没有了太多的陌生感，转了专业，忙的不可开交，关心的事情从政治这种大话题转移到专业就业，移民签证等等琐事，麻木自己说这叫真实。走之前，虽然有些舍不得，但就像刚刚确定方向的少年，带着被世俗沾染的梦想，执着坚定地上了飞机。&lt;/p&gt;

&lt;p&gt;2019年，回国了拼了命地玩，健身打球也好，喝酒聊天也罢，实习尽力而为绝不多做，research 随便糊弄打马虎眼儿。因为这一次，真的不想走。也第一次考虑移民是不是内心真正的选择，也第一次害怕自己为什么变得如此世俗不堪，丢了少年时的好奇和激情，也第一次感到遗憾，为什么出了国反而越来越现实，对家也越来越依恋。&lt;/p&gt;

&lt;p&gt;很恨自己，变成了两年前最讨厌的那种人。&lt;/p&gt;

&lt;p&gt;问自己很多遍，真的热爱技术吗？如果不，为何要玷污技术的神圣且不自知，美其名曰：用技术解决问题。问自己很多遍，是不是忘了当年的纯粹？如果不，为什么说话左右逢源，滴水不漏，却仍自诩成熟？问自己很多遍，真的认同美国吗？如果不，为何要留在加州敲代码？每天开车路过北海舒服，还是去亚超买菜舒服？
这个暑假，一直在发问，向内心最深处发问。去安徽的时候曾对着海子墓质问，当年视海子为偶像的那个少年，为什么在家人用世俗的眼光评价海子的时候，都没有去据理力争的勇气？&lt;/p&gt;

&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;/assets/haizimu.jpeg&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;海子墓, 2019/05&lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;从来如此，便对么？&lt;/p&gt;

&lt;p&gt;大三，也没什么可规划的，立 flag 的中二新鲜劲儿早就过去了。只是希望，用孩子的眼光去看待生活，拥抱生活，然后热爱生活；只是希望，永远年轻，永远热泪盈眶。&lt;/p&gt;

&lt;p&gt;再回来真的不知道什么时候了，再见北京。&lt;/p&gt;</content><author><name></name></author><summary type="html">好久没沉下心来写写东西，上一次还是高中毕业当晚，漫无目的填着词牌，写了删，删了改，孤独但自由。</summary></entry></feed>